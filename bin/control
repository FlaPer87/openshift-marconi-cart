#!/bin/bash

function _get_pid() {
    echo `ps aux | grep marconi-server | grep -v grep | awk '{print $2}'`
}

function isrunning() {
    if [ -n "$(_get_pid)" ]
    then
        return 0
    fi
    return 1
}

function status() {
    if isrunning
    then
        client_result "Marconi is running"
    else
        client_result "Marconi is stopped"
    fi
}

function use-source() {
    if ! [ $# -gt 0 ]; then
        echo "Usage: $0 git-repository-url [commit]"
        return 1
    fi
    set -e
    stop
    mkdir -p $TMP/_env/
    rm -rf $TMP/_env/*
    cp env/* $TMP/_env/
    rm -rf .??* *
    if [ -n $2 ]; then
        echo "Switching to using source from $1, commit $2"
        git clone $1 -b $2 .
    else
        echo "Switching to using source from $1"
        git clone $1 .
    fi
    mkdir -p env
    cp $TMP/_env/* env/

    bin/setup
}

function stop() {
    if (isrunning); then
        echo "Stopping Marconi cartridge"
        kill -9 "$(_get_pid)"
    fi
}

function start() {
    if (isrunning); then
        echo "Marconi already running"
        return 0
   fi

    echo "Starting Marconi cartridge"
    erb conf/marconi.conf.erb > conf/marconi.conf
    marconi-server --config-file conf/marconi.conf >/dev/null 2>&1 &
}

function restart() {
    if (isrunning); then
        stop
    fi

    start
}

function build() {
    echo
}

function post-deploy() {
    echo
}

function pre-build() {
    echo
}

function tidy() {
    echo
}

#
#  main():
#

# Ensure arguments.
if ! [ $# -gt 0 ]; then
    echo "Usage: $0 [start|restart|graceful|graceful-stop|stop|status|update|use-source]"
    exit 1
fi

# Source utility functions.
source $OPENSHIFT_CARTRIDGE_SDK_BASH

# Handle commands.
case "$1" in
    start)               start       ;;
    restart|graceful)    restart     ;;
    graceful-stop|stop)  stop        ;;
    status)              status      ;;
    build)               build       ;;
    pre-build)           pre-build   ;;
    post-deploy)         post-deploy ;;
    tidy)                tidy        ;;
    update)              update      ;;
    use-source)          use-source  $2 $3 ;;
    *)
esac
